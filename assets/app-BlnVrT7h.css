/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties {
    @supports (((-webkit-hyphens:none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))) {

        *,
        :before,
        :after,
        ::backdrop {
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-scale-x: 1;
            --tw-scale-y: 1;
            --tw-scale-z: 1;
            --tw-rotate-x: initial;
            --tw-rotate-y: initial;
            --tw-rotate-z: initial;
            --tw-skew-x: initial;
            --tw-skew-y: initial;
            --tw-space-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-tracking: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
            --tw-ease: initial;
            --tw-text-shadow-color: initial;
            --tw-text-shadow-alpha: 100%;
            --tw-animation-delay: 0s;
            --tw-animation-direction: normal;
            --tw-animation-duration: initial;
            --tw-animation-fill-mode: none;
            --tw-animation-iteration-count: 1;
            --tw-enter-opacity: 1;
            --tw-enter-rotate: 0;
            --tw-enter-scale: 1;
            --tw-enter-translate-x: 0;
            --tw-enter-translate-y: 0;
            --tw-exit-opacity: 1;
            --tw-exit-rotate: 0;
            --tw-exit-scale: 1;
            --tw-exit-translate-x: 0;
            --tw-exit-translate-y: 0;
            --rb-angle: 0deg
        }
    }
}

@layer theme {

    :root,
    :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
        --color-red-300: oklch(80.8% .114 19.571);
        --color-red-400: oklch(70.4% .191 22.216);
        --color-red-500: oklch(63.7% .237 25.331);
        --color-red-600: oklch(57.7% .245 27.325);
        --color-green-300: oklch(100% 0.00011 271.152);
        --color-green-400: oklch(100% 0.00011 271.152);
        --color-green-500: oklch(100% 0.00011 271.152);
        --color-emerald-500: oklch(100% 0.00011 271.152);
        --color-blue-300: oklch(80.9% .105 251.813);
        --color-blue-400: oklch(70.7% .165 254.624);
        --color-blue-500: oklch(62.3% .214 259.815);
        --color-black: #000;
        --color-white: #fff;
        --spacing: .25rem;
        --container-sm: 24rem;
        --container-md: 28rem;
        --container-lg: 32rem;
        --container-2xl: 42rem;
        --container-3xl: 48rem;
        --text-xs: .75rem;
        --text-xs--line-height: calc(1/.75);
        --text-sm: .875rem;
        --text-sm--line-height: calc(1.25/.875);
        --text-base: 1rem;
        --text-base--line-height: 1.5;
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75/1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75/1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2/1.5);
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --tracking-wide: .025em;
        --tracking-wider: .05em;
        --leading-relaxed: 1.625;
        --radius-xs: .125rem;
        --radius-lg: var(--radius);
        --drop-shadow-lg: 0 4px 4px #00000026;
        --ease-in-out: cubic-bezier(.4, 0, .2, 1);
        --animate-spin: spin 1s linear infinite;
        --animate-ping: ping 1s cubic-bezier(0, 0, .2, 1)infinite;
        --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1)infinite;
        --animate-bounce: bounce 1s infinite;
        --blur-sm: 8px;
        --default-transition-duration: .15s;
        --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono)
    }
}

@layer base {

    *,
    :after,
    :before,
    ::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }

    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }

    html,
    :host {
        -webkit-text-size-adjust: 100%;
        -moz-tab-size: 4;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px
    }

    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit
    }

    b,
    strong {
        font-weight: bolder
    }

    code,
    kbd,
    samp,
    pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em
    }

    small {
        font-size: 80%
    }

    sub,
    sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative
    }

    sub {
        bottom: -.25em
    }

    sup {
        top: -.5em
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse
    }

    :-moz-focusring {
        outline: auto
    }

    progress {
        vertical-align: baseline
    }

    summary {
        display: list-item
    }

    ol,
    ul,
    menu {
        list-style: none
    }

    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        vertical-align: middle;
        display: block
    }

    img,
    video {
        max-width: 100%;
        height: auto
    }

    button,
    input,
    select,
    optgroup,
    textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }

    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }

    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder
    }

    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px
    }

    ::file-selector-button {
        margin-inline-end: 4px
    }

    ::placeholder {
        opacity: 1
    }

    @supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px) {
        ::placeholder {
            color: currentColor
        }

        @supports (color:color-mix(in lab, red, red)) {
            ::placeholder {
                color: color-mix(in oklab, currentcolor 50%, transparent)
            }
        }
    }

    textarea {
        resize: vertical
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit
    }

    ::-webkit-datetime-edit {
        display: inline-flex
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0
    }

    ::-webkit-datetime-edit {
        padding-block: 0
    }

    ::-webkit-datetime-edit-year-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-month-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-day-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-hour-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-minute-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-second-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-millisecond-field {
        padding-block: 0
    }

    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0
    }

    :-moz-ui-invalid {
        box-shadow: none
    }

    button,
    input:where([type=button], [type=reset], [type=submit]) {
        -webkit-appearance: button;
        -moz-appearance: button;
        appearance: button
    }

    ::file-selector-button {
        -webkit-appearance: button;
        -moz-appearance: button;
        appearance: button
    }

    ::-webkit-inner-spin-button {
        height: auto
    }

    ::-webkit-outer-spin-button {
        height: auto
    }

    [hidden]:where(:not([hidden=until-found])) {
        display: none !important
    }

    * {
        border-color: var(--border);
        outline-color: var(--ring)
    }

    @supports (color:color-mix(in lab, red, red)) {
        * {
            outline-color: color-mix(in oklab, var(--ring)50%, transparent)
        }
    }

    body {
        background-color: var(--background);
        color: var(--foreground)
    }
}

@layer components;

@layer utilities {
    .\@container\/card-header {
        container: card-header/inline-size
    }

    .pointer-events-none {
        pointer-events: none
    }

    .sr-only {
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        position: absolute;
        overflow: hidden
    }

    .absolute {
        position: absolute
    }

    .fixed {
        position: fixed
    }

    .relative {
        position: relative
    }

    .inset-0 {
        inset: calc(var(--spacing)*0)
    }

    .inset-x-0 {
        inset-inline: calc(var(--spacing)*0)
    }

    .inset-y-0 {
        inset-block: calc(var(--spacing)*0)
    }

    .-top-0\.5 {
        top: calc(var(--spacing)*-.5)
    }

    .-top-2 {
        top: calc(var(--spacing)*-2)
    }

    .top-0 {
        top: calc(var(--spacing)*0)
    }

    .top-1\/2 {
        top: 50%
    }

    .top-4 {
        top: calc(var(--spacing)*4)
    }

    .right-0 {
        right: calc(var(--spacing)*0)
    }

    .right-2 {
        right: calc(var(--spacing)*2)
    }

    .right-3 {
        right: calc(var(--spacing)*3)
    }

    .right-4 {
        right: calc(var(--spacing)*4)
    }

    .bottom-0 {
        bottom: calc(var(--spacing)*0)
    }

    .left-0 {
        left: calc(var(--spacing)*0)
    }

    .left-1\/2 {
        left: 50%
    }

    .z-10 {
        z-index: 10
    }

    .z-40 {
        z-index: 40
    }

    .z-50 {
        z-index: 50
    }

    .z-\[100\] {
        z-index: 100
    }

    .col-start-2 {
        grid-column-start: 2
    }

    .row-span-2 {
        grid-row: span 2/span 2
    }

    .row-start-1 {
        grid-row-start: 1
    }

    .mx-auto {
        margin-inline: auto
    }

    .mt-0\.5 {
        margin-top: calc(var(--spacing)*.5)
    }

    .mt-1 {
        margin-top: calc(var(--spacing)*1)
    }

    .mt-2 {
        margin-top: calc(var(--spacing)*2)
    }

    .mt-3 {
        margin-top: calc(var(--spacing)*3)
    }

    .mt-4 {
        margin-top: calc(var(--spacing)*4)
    }

    .mt-5 {
        margin-top: calc(var(--spacing)*5)
    }

    .mt-6 {
        margin-top: calc(var(--spacing)*6)
    }

    .mt-8 {
        margin-top: calc(var(--spacing)*8)
    }

    .mt-auto {
        margin-top: auto
    }

    .mr-2 {
        margin-right: calc(var(--spacing)*2)
    }

    .-mb-10 {
        margin-bottom: calc(var(--spacing)*-10)
    }

    .mb-1 {
        margin-bottom: calc(var(--spacing)*1)
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing)*2)
    }

    .mb-3 {
        margin-bottom: calc(var(--spacing)*3)
    }

    .ml-auto {
        margin-left: auto
    }

    .block {
        display: block
    }

    .flex {
        display: flex
    }

    .grid {
        display: grid
    }

    .hidden {
        display: none
    }

    .inline-block {
        display: inline-block
    }

    .inline-flex {
        display: inline-flex
    }

    .table {
        display: table
    }

    .size-2\.5 {
        width: calc(var(--spacing)*2.5);
        height: calc(var(--spacing)*2.5)
    }

    .size-4 {
        width: calc(var(--spacing)*4);
        height: calc(var(--spacing)*4)
    }

    .size-9 {
        width: calc(var(--spacing)*9);
        height: calc(var(--spacing)*9)
    }

    .h-0 {
        height: calc(var(--spacing)*0)
    }

    .h-2 {
        height: calc(var(--spacing)*2)
    }

    .h-3 {
        height: calc(var(--spacing)*3)
    }

    .h-3\.5 {
        height: calc(var(--spacing)*3.5)
    }

    .h-4 {
        height: calc(var(--spacing)*4)
    }

    .h-5 {
        height: calc(var(--spacing)*5)
    }

    .h-6 {
        height: calc(var(--spacing)*6)
    }

    .h-7 {
        height: calc(var(--spacing)*7)
    }

    .h-8 {
        height: calc(var(--spacing)*8)
    }

    .h-9 {
        height: calc(var(--spacing)*9)
    }

    .h-10 {
        height: calc(var(--spacing)*10)
    }

    .h-11 {
        height: calc(var(--spacing)*11)
    }

    .h-12 {
        height: calc(var(--spacing)*12)
    }

    .h-16 {
        height: calc(var(--spacing)*16)
    }

    .h-20 {
        height: calc(var(--spacing)*20)
    }

    .h-\[1\.6em\] {
        height: 1.6em
    }

    .h-\[48px\] {
        height: 48px
    }

    .h-\[60px\] {
        height: 60px
    }

    .h-\[70px\] {
        height: 70px
    }

    .h-\[90px\] {
        height: 90px
    }

    .h-auto {
        height: auto
    }

    .h-full {
        height: 100%
    }

    .max-h-72 {
        max-height: calc(var(--spacing)*72)
    }

    .min-h-\[1px\] {
        min-height: 1px
    }

    .min-h-screen {
        min-height: 100vh
    }

    .w-0 {
        width: calc(var(--spacing)*0)
    }

    .w-0\.5 {
        width: calc(var(--spacing)*.5)
    }

    .w-2 {
        width: calc(var(--spacing)*2)
    }

    .w-3\.5 {
        width: calc(var(--spacing)*3.5)
    }

    .w-3\/4 {
        width: 75%
    }

    .w-4 {
        width: calc(var(--spacing)*4)
    }

    .w-5 {
        width: calc(var(--spacing)*5)
    }

    .w-6 {
        width: calc(var(--spacing)*6)
    }

    .w-7 {
        width: calc(var(--spacing)*7)
    }

    .w-8 {
        width: calc(var(--spacing)*8)
    }

    .w-10 {
        width: calc(var(--spacing)*10)
    }

    .w-12 {
        width: calc(var(--spacing)*12)
    }

    .w-16 {
        width: calc(var(--spacing)*16)
    }

    .w-\[1\.6em\] {
        width: 1.6em
    }

    .w-\[calc\(100\%-2rem\)\] {
        width: calc(100% - 2rem)
    }

    .w-fit {
        width: fit-content
    }

    .w-full {
        width: 100%
    }

    .max-w-\[7ch\] {
        max-width: 7ch
    }

    .max-w-lg {
        max-width: var(--container-lg)
    }

    .min-w-0 {
        min-width: calc(var(--spacing)*0)
    }

    .flex-1 {
        flex: 1
    }

    .shrink-0 {
        flex-shrink: 0
    }

    .origin-\(--radix-tooltip-content-transform-origin\) {
        transform-origin: var(--radix-tooltip-content-transform-origin)
    }

    .-translate-x-1\/2 {
        --tw-translate-x: -50%;
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .-translate-y-1\/2 {
        --tw-translate-y: -50%;
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .translate-y-\[calc\(-50\%_-_2px\)\] {
        --tw-translate-y: calc(-50% - 2px);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .scale-100 {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }

    .scale-110 {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }

    .rotate-45 {
        rotate: 45deg
    }

    .transform {
        transform: var(--tw-rotate-x, )var(--tw-rotate-y, )var(--tw-rotate-z, )var(--tw-skew-x, )var(--tw-skew-y, )
    }

    .animate-bounce {
        animation: var(--animate-bounce)
    }

    .animate-in {
        animation: enter var(--tw-animation-duration, var(--tw-duration, .15s))var(--tw-ease, ease)var(--tw-animation-delay, 0s)var(--tw-animation-iteration-count, 1)var(--tw-animation-direction, normal)var(--tw-animation-fill-mode, none)
    }

    .animate-ping {
        animation: var(--animate-ping)
    }

    .animate-pulse {
        animation: var(--animate-pulse)
    }

    .animate-spin {
        animation: var(--animate-spin)
    }

    .resize {
        resize: both
    }

    .list-inside {
        list-style-position: inside
    }

    .list-disc {
        list-style-type: disc
    }

    .\[appearance\:textfield\] {
        -webkit-appearance: textfield;
        -moz-appearance: textfield;
        appearance: textfield
    }

    .auto-rows-min {
        grid-auto-rows: min-content
    }

    .grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr))
    }

    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr))
    }

    .grid-cols-4 {
        grid-template-columns: repeat(4, minmax(0, 1fr))
    }

    .grid-rows-\[auto_auto\] {
        grid-template-rows: auto auto
    }

    .flex-col {
        flex-direction: column
    }

    .flex-wrap {
        flex-wrap: wrap
    }

    .items-center {
        align-items: center
    }

    .items-start {
        align-items: flex-start
    }

    .items-stretch {
        align-items: stretch
    }

    .justify-between {
        justify-content: space-between
    }

    .justify-center {
        justify-content: center
    }

    .gap-1\.5 {
        gap: calc(var(--spacing)*1.5)
    }

    .gap-2 {
        gap: calc(var(--spacing)*2)
    }

    .gap-3 {
        gap: calc(var(--spacing)*3)
    }

    .gap-4 {
        gap: calc(var(--spacing)*4)
    }

    .gap-6 {
        gap: calc(var(--spacing)*6)
    }

    :where(.space-y-1>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*1)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*1)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-2>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*2)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*2)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-4>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*4)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*4)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-5>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*5)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*5)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-6>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*6)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*6)*calc(1 - var(--tw-space-y-reverse)))
    }

    .gap-x-4 {
        column-gap: calc(var(--spacing)*4)
    }

    .gap-y-2 {
        row-gap: calc(var(--spacing)*2)
    }

    .self-start {
        align-self: flex-start
    }

    .justify-self-end {
        justify-self: flex-end
    }

    .truncate {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden
    }

    .overflow-hidden {
        overflow: hidden
    }

    .overflow-y-auto {
        overflow-y: auto
    }

    .rounded {
        border-radius: .25rem
    }

    .rounded-\[2px\] {
        border-radius: 2px
    }

    .rounded-full {
        border-radius: 3.40282e38px
    }

    .rounded-lg {
        border-radius: var(--radius)
    }

    .rounded-md {
        border-radius: calc(var(--radius) - 2px)
    }

    .rounded-xl {
        border-radius: calc(var(--radius) + 4px)
    }

    .rounded-xs {
        border-radius: var(--radius-xs)
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px
    }

    .border-2 {
        border-style: var(--tw-border-style);
        border-width: 2px
    }

    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px
    }

    .border-r {
        border-right-style: var(--tw-border-style);
        border-right-width: 1px
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px
    }

    .border-l {
        border-left-style: var(--tw-border-style);
        border-left-width: 1px
    }

    .border-dotted {
        --tw-border-style: dotted;
        border-style: dotted
    }

    .border-border\/50 {
        border-color: var(--border)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-border\/50 {
            border-color: color-mix(in oklab, var(--border)50%, transparent)
        }
    }

    .border-brand-gold,
    .border-brand-gold\/20 {
        border-color: var(--brand-gold)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-brand-gold\/20 {
            border-color: color-mix(in oklab, var(--brand-gold)20%, transparent)
        }
    }

    .border-brand-gold\/30 {
        border-color: var(--brand-gold)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-brand-gold\/30 {
            border-color: color-mix(in oklab, var(--brand-gold)30%, transparent)
        }
    }

    .border-brand-gold\/60 {
        border-color: var(--brand-gold)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-brand-gold\/60 {
            border-color: color-mix(in oklab, var(--brand-gold)60%, transparent)
        }
    }

    .border-brand-green,
    .border-brand-green\/25 {
        border-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-brand-green\/25 {
            border-color: color-mix(in oklab, var(--brand-green)25%, transparent)
        }
    }

    .border-brand-green\/30 {
        border-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-brand-green\/30 {
            border-color: color-mix(in oklab, var(--brand-green)30%, transparent)
        }
    }

    .border-brand-green\/35 {
        border-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-brand-green\/35 {
            border-color: color-mix(in oklab, var(--brand-green)35%, transparent)
        }
    }

    .border-brand-green\/40 {
        border-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-brand-green\/40 {
            border-color: color-mix(in oklab, var(--brand-green)40%, transparent)
        }
    }

    .border-brand-green\/45 {
        border-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-brand-green\/45 {
            border-color: color-mix(in oklab, var(--brand-green)45%, transparent)
        }
    }

    .border-brand-green\/50 {
        border-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-brand-green\/50 {
            border-color: color-mix(in oklab, var(--brand-green)50%, transparent)
        }
    }

    .border-green-500\/30 {
        border-color: #ffffff
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-green-500\/30 {
            border-color: color-mix(in oklab, var(--color-green-500)30%, transparent)
        }
    }

    .border-green-500\/40 {
        border-color: #fffffff5
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-green-500\/40 {
            border-color: color-mix(in oklab, var(--color-green-500)40%, transparent)
        }
    }

    .border-input {
        border-color: var(--input)
    }

    .border-red-500\/30 {
        border-color: #fb2c364d
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-red-500\/30 {
            border-color: color-mix(in oklab, var(--color-red-500)30%, transparent)
        }
    }

    .border-red-500\/40 {
        border-color: #fb2c3666
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-red-500\/40 {
            border-color: color-mix(in oklab, var(--color-red-500)40%, transparent)
        }
    }

    .border-red-500\/60 {
        border-color: #fb2c3699
    }

    @supports (color:color-mix(in lab, red, red)) {
        .border-red-500\/60 {
            border-color: color-mix(in oklab, var(--color-red-500)60%, transparent)
        }
    }

    .bg-\[\#0D1117\] {
        background-color: #0d1117
    }

    .bg-accent {
        background-color: var(--accent)
    }

    .bg-background,
    .bg-background\/30 {
        background-color: var(--background)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-background\/30 {
            background-color: color-mix(in oklab, var(--background)30%, transparent)
        }
    }

    .bg-background\/50 {
        background-color: var(--background)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-background\/50 {
            background-color: color-mix(in oklab, var(--background)50%, transparent)
        }
    }

    .bg-background\/60 {
        background-color: var(--background)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-background\/60 {
            background-color: color-mix(in oklab, var(--background)60%, transparent)
        }
    }

    .bg-background\/80 {
        background-color: var(--background)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-background\/80 {
            background-color: color-mix(in oklab, var(--background)80%, transparent)
        }
    }

    .bg-background\/95 {
        background-color: var(--background)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-background\/95 {
            background-color: color-mix(in oklab, var(--background)95%, transparent)
        }
    }

    .bg-black\/50 {
        background-color: #00000080
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-black\/50 {
            background-color: color-mix(in oklab, var(--color-black)50%, transparent)
        }
    }

    .bg-black\/60 {
        background-color: #0009
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-black\/60 {
            background-color: color-mix(in oklab, var(--color-black)60%, transparent)
        }
    }

    .bg-border {
        background-color: var(--border)
    }

    .bg-brand-gold\/50 {
        background-color: var(--brand-gold)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-brand-gold\/50 {
            background-color: color-mix(in oklab, var(--brand-gold)50%, transparent)
        }
    }

    .bg-brand-green\/5 {
        background-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-brand-green\/5 {
            background-color: color-mix(in oklab, var(--brand-green)5%, transparent)
        }
    }

    .bg-brand-green\/10 {
        background-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-brand-green\/10 {
            background-color: color-mix(in oklab, var(--brand-green)10%, transparent)
        }
    }

    .bg-brand-green\/20 {
        background-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-brand-green\/20 {
            background-color: color-mix(in oklab, var(--brand-green)20%, transparent)
        }
    }

    .bg-brand-green\/30 {
        background-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-brand-green\/30 {
            background-color: color-mix(in oklab, var(--brand-green)30%, transparent)
        }
    }

    .bg-brand-green\/50 {
        background-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-brand-green\/50 {
            background-color: color-mix(in oklab, var(--brand-green)50%, transparent)
        }
    }

    .bg-brand-green\/60 {
        background-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-brand-green\/60 {
            background-color: color-mix(in oklab, var(--brand-green)60%, transparent)
        }
    }

    .bg-card {
        background-color: var(--card)
    }

    .bg-destructive {
        background-color: var(--destructive)
    }

    .bg-green-500\/10 {
        background-color: #ffffff1a
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-green-500\/10 {
            background-color: color-mix(in oklab, var(--color-green-500)10%, transparent)
        }
    }

    .bg-primary {
        background-color: var(--brand-gold)
    }

    .bg-red-500\/10 {
        background-color: #fb2c361a
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-red-500\/10 {
            background-color: color-mix(in oklab, var(--color-red-500)10%, transparent)
        }
    }

    .bg-red-500\/30 {
        background-color: #fb2c364d
    }

    @supports (color:color-mix(in lab, red, red)) {
        .bg-red-500\/30 {
            background-color: color-mix(in oklab, var(--color-red-500)30%, transparent)
        }
    }

    .bg-secondary {
        background-color: var(--secondary)
    }

    .bg-transparent {
        background-color: #0000
    }

    .bg-gradient-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    .bg-gradient-to-r {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    .bg-gradient-to-t {
        --tw-gradient-position: to top in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    .from-background\/90 {
        --tw-gradient-from: var(--background)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .from-background\/90 {
            --tw-gradient-from: color-mix(in oklab, var(--background)90%, transparent)
        }
    }

    .from-background\/90 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-background\/95 {
        --tw-gradient-from: var(--background)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .from-background\/95 {
            --tw-gradient-from: color-mix(in oklab, var(--background)95%, transparent)
        }
    }

    .from-background\/95 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-brand-gold-light {
        --tw-gradient-from: var(--brand-gold-light);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-brand-gold\/5 {
        --tw-gradient-from: var(--brand-gold)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .from-brand-gold\/5 {
            --tw-gradient-from: color-mix(in oklab, var(--brand-gold)5%, transparent)
        }
    }

    .from-brand-gold\/5 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-brand-gold\/10 {
        --tw-gradient-from: var(--brand-gold)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .from-brand-gold\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--brand-gold)10%, transparent)
        }
    }

    .from-brand-gold\/10 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-brand-gold\/20 {
        --tw-gradient-from: var(--brand-gold)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .from-brand-gold\/20 {
            --tw-gradient-from: color-mix(in oklab, var(--brand-gold)20%, transparent)
        }
    }

    .from-brand-gold\/20 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-brand-green\/10 {
        --tw-gradient-from: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .from-brand-green\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--brand-green)10%, transparent)
        }
    }

    .from-brand-green\/10 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-green-500\/10 {
        --tw-gradient-from: #00c7581a
    }

    @supports (color:color-mix(in lab, red, red)) {
        .from-green-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-green-500)10%, transparent)
        }
    }

    .from-green-500\/10 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-red-500\/10 {
        --tw-gradient-from: #fb2c361a
    }

    @supports (color:color-mix(in lab, red, red)) {
        .from-red-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-red-500)10%, transparent)
        }
    }

    .from-red-500\/10 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .via-brand-gold\/5 {
        --tw-gradient-via: var(--brand-gold)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .via-brand-gold\/5 {
            --tw-gradient-via: color-mix(in oklab, var(--brand-gold)5%, transparent)
        }
    }

    .via-brand-gold\/5 {
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-via)var(--tw-gradient-via-position), var(--tw-gradient-to)var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops)
    }

    .via-brand-green\/5 {
        --tw-gradient-via: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .via-brand-green\/5 {
            --tw-gradient-via: color-mix(in oklab, var(--brand-green)5%, transparent)
        }
    }

    .via-brand-green\/5 {
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-via)var(--tw-gradient-via-position), var(--tw-gradient-to)var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops)
    }

    .via-transparent {
        --tw-gradient-via: transparent;
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-via)var(--tw-gradient-via-position), var(--tw-gradient-to)var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops)
    }

    .to-background\/95 {
        --tw-gradient-to: var(--background)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .to-background\/95 {
            --tw-gradient-to: color-mix(in oklab, var(--background)95%, transparent)
        }
    }

    .to-background\/95 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-brand-gold {
        --tw-gradient-to: var(--brand-gold);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-brand-green-dark\/5 {
        --tw-gradient-to: var(--brand-green-dark)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .to-brand-green-dark\/5 {
            --tw-gradient-to: color-mix(in oklab, var(--brand-green-dark)5%, transparent)
        }
    }

    .to-brand-green-dark\/5 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-brand-green\/5 {
        --tw-gradient-to: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .to-brand-green\/5 {
            --tw-gradient-to: color-mix(in oklab, var(--brand-green)5%, transparent)
        }
    }

    .to-brand-green\/5 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-brand-green\/10 {
        --tw-gradient-to: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .to-brand-green\/10 {
            --tw-gradient-to: color-mix(in oklab, var(--brand-green)10%, transparent)
        }
    }

    .to-brand-green\/10 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-emerald-500\/5 {
        --tw-gradient-to: #00bb7f0d
    }

    @supports (color:color-mix(in lab, red, red)) {
        .to-emerald-500\/5 {
            --tw-gradient-to: color-mix(in oklab, var(--color-emerald-500)5%, transparent)
        }
    }

    .to-emerald-500\/5 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-red-600\/5 {
        --tw-gradient-to: #e400140d
    }

    @supports (color:color-mix(in lab, red, red)) {
        .to-red-600\/5 {
            --tw-gradient-to: color-mix(in oklab, var(--color-red-600)5%, transparent)
        }
    }

    .to-red-600\/5 {
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-transparent {
        --tw-gradient-to: transparent;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .bg-clip-text {
        -webkit-background-clip: text;
        background-clip: text
    }

    .fill-primary {
        fill: var(--brand-gold)
    }

    .object-contain {
        object-fit: contain
    }

    .p-0 {
        padding: calc(var(--spacing)*0)
    }

    .p-2 {
        padding: calc(var(--spacing)*2)
    }

    .p-3 {
        padding: calc(var(--spacing)*3)
    }

    .p-4 {
        padding: calc(var(--spacing)*4)
    }

    .p-5 {
        padding: calc(var(--spacing)*5)
    }

    .p-6 {
        padding: calc(var(--spacing)*6)
    }

    .px-1 {
        padding-inline: calc(var(--spacing)*1)
    }

    .px-2 {
        padding-inline: calc(var(--spacing)*2)
    }

    .px-2\.5 {
        padding-inline: calc(var(--spacing)*2.5)
    }

    .px-3 {
        padding-inline: calc(var(--spacing)*3)
    }

    .px-4 {
        padding-inline: calc(var(--spacing)*4)
    }

    .px-5 {
        padding-inline: calc(var(--spacing)*5)
    }

    .px-6 {
        padding-inline: calc(var(--spacing)*6)
    }

    .px-8 {
        padding-inline: calc(var(--spacing)*8)
    }

    .py-1 {
        padding-block: calc(var(--spacing)*1)
    }

    .py-1\.5 {
        padding-block: calc(var(--spacing)*1.5)
    }

    .py-2 {
        padding-block: calc(var(--spacing)*2)
    }

    .py-3 {
        padding-block: calc(var(--spacing)*3)
    }

    .py-4 {
        padding-block: calc(var(--spacing)*4)
    }

    .py-6 {
        padding-block: calc(var(--spacing)*6)
    }

    .py-8 {
        padding-block: calc(var(--spacing)*8)
    }

    .pt-2 {
        padding-top: calc(var(--spacing)*2)
    }

    .pt-4 {
        padding-top: calc(var(--spacing)*4)
    }

    .pr-1 {
        padding-right: calc(var(--spacing)*1)
    }

    .pr-28 {
        padding-right: calc(var(--spacing)*28)
    }

    .text-center {
        text-align: center
    }

    .text-right {
        text-align: right
    }

    .font-mono {
        font-family: var(--font-mono)
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height))
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height))
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height))
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height))
    }

    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height))
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height))
    }

    .text-\[10px\] {
        font-size: 10px
    }

    .leading-none {
        --tw-leading: 1;
        line-height: 1
    }

    .leading-relaxed {
        --tw-leading: var(--leading-relaxed);
        line-height: var(--leading-relaxed)
    }

    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold)
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium)
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold)
    }

    .tracking-wide {
        --tw-tracking: var(--tracking-wide);
        letter-spacing: var(--tracking-wide)
    }

    .tracking-wider {
        --tw-tracking: var(--tracking-wider);
        letter-spacing: var(--tracking-wider)
    }

    .text-balance {
        text-wrap: balance
    }

    .break-all {
        word-break: break-all
    }

    .whitespace-nowrap {
        white-space: nowrap
    }

    .whitespace-pre-line {
        white-space: pre-line
    }

    .text-brand-gold {
        color: var(--brand-gold)
    }

    .text-brand-gold-light,
    .text-brand-gold-light\/40 {
        color: var(--brand-gold-light)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-brand-gold-light\/40 {
            color: color-mix(in oklab, var(--brand-gold-light)40%, transparent)
        }
    }

    .text-brand-gold-light\/60 {
        color: var(--brand-gold-light)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-brand-gold-light\/60 {
            color: color-mix(in oklab, var(--brand-gold-light)60%, transparent)
        }
    }

    .text-brand-green {
        color: var(--brand-green)
    }

    .text-brand-green-light,
    .text-brand-green-light\/40 {
        color: var(--brand-green-light)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-brand-green-light\/40 {
            color: color-mix(in oklab, var(--brand-green-light)40%, transparent)
        }
    }

    .text-brand-green-light\/50 {
        color: var(--brand-green-light)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-brand-green-light\/50 {
            color: color-mix(in oklab, var(--brand-green-light)50%, transparent)
        }
    }

    .text-brand-green-light\/60 {
        color: var(--brand-green-light)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-brand-green-light\/60 {
            color: color-mix(in oklab, var(--brand-green-light)60%, transparent)
        }
    }

    .text-brand-green-light\/70 {
        color: var(--brand-green-light)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-brand-green-light\/70 {
            color: color-mix(in oklab, var(--brand-green-light)70%, transparent)
        }
    }

    .text-brand-green-light\/80 {
        color: var(--brand-green-light)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-brand-green-light\/80 {
            color: color-mix(in oklab, var(--brand-green-light)80%, transparent)
        }
    }

    .text-brand-green-light\/90 {
        color: var(--brand-green-light)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-brand-green-light\/90 {
            color: color-mix(in oklab, var(--brand-green-light)90%, transparent)
        }
    }

    .text-card-foreground {
        color: var(--card-foreground)
    }

    .text-foreground,
    .text-foreground\/80 {
        color: var(--foreground)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-foreground\/80 {
            color: color-mix(in oklab, var(--foreground)80%, transparent)
        }
    }

    .text-green-300 {
        color: var(--color-green-300)
    }

    .text-green-300\/80 {
        color: #7bf1a8cc
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-green-300\/80 {
            color: color-mix(in oklab, var(--color-green-300)80%, transparent)
        }
    }

    .text-green-400 {
        color: var(--color-green-400)
    }

    .text-green-500 {
        color: var(--color-green-500)
    }

    .text-muted-foreground {
        color: var(--muted-foreground)
    }

    .text-primary {
        color: var(--brand-gold)
    }

    .text-primary-foreground {
        color: var(--primary-foreground)
    }

    .text-red-300\/80 {
        color: #ffa3a3cc
    }

    @supports (color:color-mix(in lab, red, red)) {
        .text-red-300\/80 {
            color: color-mix(in oklab, var(--color-red-300)80%, transparent)
        }
    }

    .text-red-400 {
        color: var(--color-red-400)
    }

    .text-red-500 {
        color: var(--color-red-500)
    }

    .text-secondary-foreground {
        color: var(--secondary-foreground)
    }

    .text-transparent {
        color: #0000
    }

    .text-white {
        color: var(--color-white)
    }

    .uppercase {
        text-transform: uppercase
    }

    .underline-offset-4 {
        text-underline-offset: 4px
    }

    .opacity-0 {
        opacity: 0
    }

    .opacity-70 {
        opacity: .7
    }

    .shadow-\[0_0_12px_rgba\(0\,255\,144\,0\.25\)\] {
        --tw-shadow: 0 0 12px var(--tw-shadow-color, #00ff9040);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-lg {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-sm {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-xl {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-xs {
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .ring,
    .ring-1 {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .ring-2 {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .shadow-brand-gold\/60 {
        --tw-shadow-color: var(--brand-gold)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .shadow-brand-gold\/60 {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--brand-gold)60%, transparent)var(--tw-shadow-alpha), transparent)
        }
    }

    .shadow-brand-green\/50 {
        --tw-shadow-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .shadow-brand-green\/50 {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--brand-green)50%, transparent)var(--tw-shadow-alpha), transparent)
        }
    }

    .ring-brand-gold\/40 {
        --tw-ring-color: var(--brand-gold)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .ring-brand-gold\/40 {
            --tw-ring-color: color-mix(in oklab, var(--brand-gold)40%, transparent)
        }
    }

    .ring-brand-green\/40 {
        --tw-ring-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .ring-brand-green\/40 {
            --tw-ring-color: color-mix(in oklab, var(--brand-green)40%, transparent)
        }
    }

    .ring-white\/10 {
        --tw-ring-color: #ffffff1a
    }

    @supports (color:color-mix(in lab, red, red)) {
        .ring-white\/10 {
            --tw-ring-color: color-mix(in oklab, var(--color-white)10%, transparent)
        }
    }

    .ring-offset-background {
        --tw-ring-offset-color: var(--background)
    }

    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px
    }

    .brightness-100 {
        --tw-brightness: brightness(100%);
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }

    .brightness-150 {
        --tw-brightness: brightness(150%);
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }

    .drop-shadow-lg {
        --tw-drop-shadow-size: drop-shadow(0 4px 4px var(--tw-drop-shadow-color, #00000026));
        --tw-drop-shadow: drop-shadow(var(--drop-shadow-lg));
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }

    .filter {
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }

    .backdrop-blur {
        --tw-backdrop-blur: blur(8px);
        -webkit-backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, )
    }

    .backdrop-blur-sm {
        --tw-backdrop-blur: blur(var(--blur-sm));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, )
    }

    .transition {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }

    .transition-\[color\,box-shadow\] {
        transition-property: color, box-shadow;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }

    .transition-opacity {
        transition-property: opacity;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }

    .duration-200 {
        --tw-duration: .2s;
        transition-duration: .2s
    }

    .duration-300 {
        --tw-duration: .3s;
        transition-duration: .3s
    }

    .duration-500 {
        --tw-duration: .5s;
        transition-duration: .5s
    }

    .duration-1000 {
        --tw-duration: 1s;
        transition-duration: 1s
    }

    .ease-in-out {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out)
    }

    .will-change-transform {
        will-change: transform
    }

    .fade-in-0 {
        --tw-enter-opacity: 0
    }

    .outline-none {
        --tw-outline-style: none;
        outline-style: none
    }

    .select-none {
        -webkit-user-select: none;
        user-select: none
    }

    .zoom-in-95 {
        --tw-enter-scale: .95
    }

    .ring-inset {
        --tw-ring-inset: inset
    }

    .running {
        animation-play-state: running
    }

    .text-shadow-lg {
        text-shadow: 0px 1px 2px var(--tw-text-shadow-color, #0000001a), 0px 3px 2px var(--tw-text-shadow-color, #0000001a), 0px 4px 8px var(--tw-text-shadow-color, #0000001a)
    }

    @media (hover:hover) {
        .group-hover\:opacity-100:is(:where(.group):hover *) {
            opacity: 1
        }
    }

    .selection\:bg-brand-green ::selection {
        background-color: var(--brand-green)
    }

    .selection\:bg-brand-green::selection {
        background-color: var(--brand-green)
    }

    .selection\:bg-primary ::selection {
        background-color: var(--brand-gold)
    }

    .selection\:bg-primary::selection {
        background-color: var(--brand-gold)
    }

    .selection\:text-background ::selection {
        color: var(--background)
    }

    .selection\:text-background::selection {
        color: var(--background)
    }

    .selection\:text-primary-foreground ::selection {
        color: var(--primary-foreground)
    }

    .selection\:text-primary-foreground::selection {
        color: var(--primary-foreground)
    }

    .file\:inline-flex::file-selector-button {
        display: inline-flex
    }

    .file\:h-7::file-selector-button {
        height: calc(var(--spacing)*7)
    }

    .file\:border-0::file-selector-button {
        border-style: var(--tw-border-style);
        border-width: 0
    }

    .file\:bg-transparent::file-selector-button {
        background-color: #0000
    }

    .file\:text-sm::file-selector-button {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height))
    }

    .file\:font-medium::file-selector-button {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium)
    }

    .file\:text-foreground::file-selector-button {
        color: var(--foreground)
    }

    .placeholder\:text-brand-green-light\/50::placeholder {
        color: var(--brand-green-light)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .placeholder\:text-brand-green-light\/50::placeholder {
            color: color-mix(in oklab, var(--brand-green-light)50%, transparent)
        }
    }

    .placeholder\:text-muted-foreground::placeholder {
        color: var(--muted-foreground)
    }

    @media (hover:hover) {
        .hover\:border-blue-400\/30:hover {
            border-color: #4444444d
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:border-blue-400\/30:hover {
                border-color: color-mix(in oklab, var(--color-blue-400)30%, transparent)
            }
        }

        .hover\:border-blue-500\/30:hover {
            border-color: #3a3a3a4d
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:border-blue-500\/30:hover {
                border-color: color-mix(in oklab, var(--color-blue-500)30%, transparent)
            }
        }

        .hover\:border-brand-gold\/40:hover {
            border-color: var(--brand-gold)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:border-brand-gold\/40:hover {
                border-color: color-mix(in oklab, var(--brand-gold)40%, transparent)
            }
        }

        .hover\:border-brand-gold\/60:hover {
            border-color: var(--brand-gold)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:border-brand-gold\/60:hover {
                border-color: color-mix(in oklab, var(--brand-gold)60%, transparent)
            }
        }

        .hover\:border-brand-green\/60:hover {
            border-color: var(--brand-green)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:border-brand-green\/60:hover {
                border-color: color-mix(in oklab, var(--brand-green)60%, transparent)
            }
        }

        .hover\:border-brand-green\/70:hover {
            border-color: var(--brand-green)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:border-brand-green\/70:hover {
                border-color: color-mix(in oklab, var(--brand-green)70%, transparent)
            }
        }

        .hover\:bg-accent:hover {
            background-color: var(--accent)
        }

        .hover\:bg-background\/20:hover {
            background-color: var(--background)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-background\/20:hover {
                background-color: color-mix(in oklab, var(--background)20%, transparent)
            }
        }

        .hover\:bg-blue-400\/20:hover {
            background-color: #3d3d3d33
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-blue-400\/20:hover {
                background-color: color-mix(in oklab, var(--color-blue-400)20%, transparent)
            }
        }

        .hover\:bg-blue-500\/20:hover {
            background-color: #3f3f3f33
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-blue-500\/20:hover {
                background-color: color-mix(in oklab, var(--color-blue-500)20%, transparent)
            }
        }

        .hover\:bg-brand-green\/5:hover {
            background-color: var(--brand-green)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-brand-green\/5:hover {
                background-color: color-mix(in oklab, var(--brand-green)5%, transparent)
            }
        }

        .hover\:bg-brand-green\/10:hover {
            background-color: var(--brand-green)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-brand-green\/10:hover {
                background-color: color-mix(in oklab, var(--brand-green)10%, transparent)
            }
        }

        .hover\:bg-destructive\/90:hover {
            background-color: var(--destructive)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-destructive\/90:hover {
                background-color: color-mix(in oklab, var(--destructive)90%, transparent)
            }
        }

        .hover\:bg-primary\/90:hover {
            background-color: var(--brand-gold)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-primary\/90:hover {
                background-color: color-mix(in oklab, var(--brand-gold)90%, transparent)
            }
        }

        .hover\:bg-secondary\/80:hover {
            background-color: var(--secondary)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:bg-secondary\/80:hover {
                background-color: color-mix(in oklab, var(--secondary)80%, transparent)
            }
        }

        .hover\:bg-gradient-to-br:hover {
            --tw-gradient-position: to bottom right in oklab;
            background-image: linear-gradient(var(--tw-gradient-stops))
        }

        .hover\:from-brand-gold\/10:hover {
            --tw-gradient-from: var(--brand-gold)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:from-brand-gold\/10:hover {
                --tw-gradient-from: color-mix(in oklab, var(--brand-gold)10%, transparent)
            }
        }

        .hover\:from-brand-gold\/10:hover {
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }

        .hover\:from-brand-gold\/15:hover {
            --tw-gradient-from: var(--brand-gold)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:from-brand-gold\/15:hover {
                --tw-gradient-from: color-mix(in oklab, var(--brand-gold)15%, transparent)
            }
        }

        .hover\:from-brand-gold\/15:hover {
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }

        .hover\:to-brand-green\/10:hover {
            --tw-gradient-to: var(--brand-green)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .hover\:to-brand-green\/10:hover {
                --tw-gradient-to: color-mix(in oklab, var(--brand-green)10%, transparent)
            }
        }

        .hover\:to-brand-green\/10:hover {
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }

        .hover\:text-accent-foreground:hover {
            color: var(--accent-foreground)
        }

        .hover\:text-blue-300:hover {
            color: var(--color-blue-300)
        }

        .hover\:text-blue-400:hover {
            color: var(--color-blue-400)
        }

        .hover\:text-brand-gold:hover {
            color: var(--brand-gold)
        }

        .hover\:text-brand-green:hover {
            color: var(--brand-green)
        }

        .hover\:underline:hover {
            text-decoration-line: underline
        }

        .hover\:opacity-100:hover {
            opacity: 1
        }
    }

    .focus\:border-brand-green\/60:focus {
        border-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .focus\:border-brand-green\/60:focus {
            border-color: color-mix(in oklab, var(--brand-green)60%, transparent)
        }
    }

    .focus\:border-red-500:focus {
        border-color: var(--color-red-500)
    }

    .focus\:ring-1:focus {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .focus\:ring-2:focus {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .focus\:ring-brand-green\/60:focus {
        --tw-ring-color: var(--brand-green)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .focus\:ring-brand-green\/60:focus {
            --tw-ring-color: color-mix(in oklab, var(--brand-green)60%, transparent)
        }
    }

    .focus\:ring-ring:focus {
        --tw-ring-color: var(--ring)
    }

    .focus\:ring-offset-2:focus {
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-shadow: var(--tw-ring-inset, )0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color)
    }

    .focus\:outline-hidden:focus {
        --tw-outline-style: none;
        outline-style: none
    }

    @media (forced-colors:active) {
        .focus\:outline-hidden:focus {
            outline-offset: 2px;
            outline: 2px solid #0000
        }
    }

    .focus\:outline-none:focus {
        --tw-outline-style: none;
        outline-style: none
    }

    .focus-visible\:border-ring:focus-visible {
        border-color: var(--ring)
    }

    .focus-visible\:ring-\[3px\]:focus-visible {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(3px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }

    .focus-visible\:ring-destructive\/20:focus-visible {
        --tw-ring-color: var(--destructive)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .focus-visible\:ring-destructive\/20:focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--destructive)20%, transparent)
        }
    }

    .focus-visible\:ring-ring\/50:focus-visible {
        --tw-ring-color: var(--ring)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .focus-visible\:ring-ring\/50:focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--ring)50%, transparent)
        }
    }

    .disabled\:pointer-events-none:disabled {
        pointer-events: none
    }

    .disabled\:cursor-not-allowed:disabled {
        cursor: not-allowed
    }

    .disabled\:opacity-50:disabled {
        opacity: .5
    }

    .disabled\:opacity-60:disabled {
        opacity: .6
    }

    .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot=card-action]) {
        grid-template-columns: 1fr auto
    }

    .has-\[\>svg\]\:px-2\.5:has(>svg) {
        padding-inline: calc(var(--spacing)*2.5)
    }

    .has-\[\>svg\]\:px-3:has(>svg) {
        padding-inline: calc(var(--spacing)*3)
    }

    .has-\[\>svg\]\:px-4:has(>svg) {
        padding-inline: calc(var(--spacing)*4)
    }

    .aria-invalid\:border-destructive[aria-invalid=true] {
        border-color: var(--destructive)
    }

    .aria-invalid\:ring-destructive\/20[aria-invalid=true] {
        --tw-ring-color: var(--destructive)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .aria-invalid\:ring-destructive\/20[aria-invalid=true] {
            --tw-ring-color: color-mix(in oklab, var(--destructive)20%, transparent)
        }
    }

    .data-\[orientation\=horizontal\]\:h-px[data-orientation=horizontal] {
        height: 1px
    }

    .data-\[orientation\=horizontal\]\:w-full[data-orientation=horizontal] {
        width: 100%
    }

    .data-\[orientation\=vertical\]\:h-full[data-orientation=vertical] {
        height: 100%
    }

    .data-\[orientation\=vertical\]\:w-px[data-orientation=vertical] {
        width: 1px
    }

    .data-\[side\=bottom\]\:slide-in-from-top-2[data-side=bottom] {
        --tw-enter-translate-y: calc(2*var(--spacing)*-1)
    }

    .data-\[side\=left\]\:slide-in-from-right-2[data-side=left] {
        --tw-enter-translate-x: calc(2*var(--spacing))
    }

    .data-\[side\=right\]\:slide-in-from-left-2[data-side=right] {
        --tw-enter-translate-x: calc(2*var(--spacing)*-1)
    }

    .data-\[side\=top\]\:slide-in-from-bottom-2[data-side=top] {
        --tw-enter-translate-y: calc(2*var(--spacing))
    }

    .data-\[state\=closed\]\:animate-out[data-state=closed] {
        animation: exit var(--tw-animation-duration, var(--tw-duration, .15s))var(--tw-ease, ease)var(--tw-animation-delay, 0s)var(--tw-animation-iteration-count, 1)var(--tw-animation-direction, normal)var(--tw-animation-fill-mode, none)
    }

    .data-\[state\=closed\]\:duration-300[data-state=closed] {
        --tw-duration: .3s;
        transition-duration: .3s
    }

    .data-\[state\=closed\]\:fade-out-0[data-state=closed] {
        --tw-exit-opacity: 0
    }

    .data-\[state\=closed\]\:zoom-out-95[data-state=closed] {
        --tw-exit-scale: .95
    }

    .data-\[state\=closed\]\:slide-out-to-bottom[data-state=closed] {
        --tw-exit-translate-y: 100%
    }

    .data-\[state\=closed\]\:slide-out-to-left[data-state=closed] {
        --tw-exit-translate-x: -100%
    }

    .data-\[state\=closed\]\:slide-out-to-right[data-state=closed] {
        --tw-exit-translate-x: 100%
    }

    .data-\[state\=closed\]\:slide-out-to-top[data-state=closed] {
        --tw-exit-translate-y: -100%
    }

    .data-\[state\=open\]\:animate-in[data-state=open] {
        animation: enter var(--tw-animation-duration, var(--tw-duration, .15s))var(--tw-ease, ease)var(--tw-animation-delay, 0s)var(--tw-animation-iteration-count, 1)var(--tw-animation-direction, normal)var(--tw-animation-fill-mode, none)
    }

    .data-\[state\=open\]\:bg-secondary[data-state=open] {
        background-color: var(--secondary)
    }

    .data-\[state\=open\]\:duration-500[data-state=open] {
        --tw-duration: .5s;
        transition-duration: .5s
    }

    .data-\[state\=open\]\:fade-in-0[data-state=open] {
        --tw-enter-opacity: 0
    }

    .data-\[state\=open\]\:slide-in-from-bottom[data-state=open] {
        --tw-enter-translate-y: 100%
    }

    .data-\[state\=open\]\:slide-in-from-left[data-state=open] {
        --tw-enter-translate-x: -100%
    }

    .data-\[state\=open\]\:slide-in-from-right[data-state=open] {
        --tw-enter-translate-x: 100%
    }

    .data-\[state\=open\]\:slide-in-from-top[data-state=open] {
        --tw-enter-translate-y: -100%
    }

    @supports ((-webkit-backdrop-filter:var(--tw)) or (backdrop-filter:var(--tw))) {
        .supports-\[backdrop-filter\]\:bg-background\/60 {
            background-color: var(--background)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .supports-\[backdrop-filter\]\:bg-background\/60 {
                background-color: color-mix(in oklab, var(--background)60%, transparent)
            }
        }
    }

    @media (min-width:40rem) {
        .sm\:right-4 {
            right: calc(var(--spacing)*4)
        }

        .sm\:col-span-2 {
            grid-column: span 2/span 2
        }

        .sm\:inline {
            display: inline
        }

        .sm\:h-8 {
            height: calc(var(--spacing)*8)
        }

        .sm\:w-auto {
            width: auto
        }

        .sm\:max-w-2xl {
            max-width: var(--container-2xl)
        }

        .sm\:max-w-3xl {
            max-width: var(--container-3xl)
        }

        .sm\:max-w-\[10ch\] {
            max-width: 10ch
        }

        .sm\:max-w-md {
            max-width: var(--container-md)
        }

        .sm\:max-w-sm {
            max-width: var(--container-sm)
        }

        .sm\:min-w-\[200px\] {
            min-width: 200px
        }

        .sm\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr))
        }

        .sm\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr))
        }

        .sm\:flex-row {
            flex-direction: row
        }

        .sm\:items-center {
            align-items: center
        }

        .sm\:justify-between {
            justify-content: space-between
        }

        .sm\:gap-2 {
            gap: calc(var(--spacing)*2)
        }

        .sm\:gap-3 {
            gap: calc(var(--spacing)*3)
        }

        .sm\:gap-4 {
            gap: calc(var(--spacing)*4)
        }

        .sm\:px-3 {
            padding-inline: calc(var(--spacing)*3)
        }

        .sm\:px-6 {
            padding-inline: calc(var(--spacing)*6)
        }

        .sm\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height))
        }

        .sm\:text-xs {
            font-size: var(--text-xs);
            line-height: var(--tw-leading, var(--text-xs--line-height))
        }
    }

    @media (min-width:48rem) {
        .md\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr))
        }

        .md\:p-8 {
            padding: calc(var(--spacing)*8)
        }

        .md\:text-base {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height))
        }

        .md\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height))
        }
    }

    @media (min-width:64rem) {
        .lg\:col-span-1 {
            grid-column: span 1/span 1
        }

        .lg\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr))
        }

        .lg\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr))
        }

        .lg\:px-8 {
            padding-inline: calc(var(--spacing)*8)
        }
    }

    .dark\:border-input:is(.dark *) {
        border-color: var(--input)
    }

    .dark\:bg-destructive\/60:is(.dark *) {
        background-color: var(--destructive)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .dark\:bg-destructive\/60:is(.dark *) {
            background-color: color-mix(in oklab, var(--destructive)60%, transparent)
        }
    }

    .dark\:bg-input\/30:is(.dark *) {
        background-color: var(--input)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .dark\:bg-input\/30:is(.dark *) {
            background-color: color-mix(in oklab, var(--input)30%, transparent)
        }
    }

    @media (hover:hover) {
        .dark\:hover\:bg-accent\/50:is(.dark *):hover {
            background-color: var(--accent)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .dark\:hover\:bg-accent\/50:is(.dark *):hover {
                background-color: color-mix(in oklab, var(--accent)50%, transparent)
            }
        }

        .dark\:hover\:bg-input\/50:is(.dark *):hover {
            background-color: var(--input)
        }

        @supports (color:color-mix(in lab, red, red)) {
            .dark\:hover\:bg-input\/50:is(.dark *):hover {
                background-color: color-mix(in oklab, var(--input)50%, transparent)
            }
        }
    }

    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
        --tw-ring-color: var(--destructive)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
            --tw-ring-color: color-mix(in oklab, var(--destructive)40%, transparent)
        }
    }

    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid=true] {
        --tw-ring-color: var(--destructive)
    }

    @supports (color:color-mix(in lab, red, red)) {
        .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid=true] {
            --tw-ring-color: color-mix(in oklab, var(--destructive)40%, transparent)
        }
    }

    .\[\&_svg\]\:pointer-events-none svg {
        pointer-events: none
    }

    .\[\&_svg\]\:shrink-0 svg {
        flex-shrink: 0
    }

    .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*=size-]) {
        width: calc(var(--spacing)*4);
        height: calc(var(--spacing)*4)
    }

    .\[\&\:\:-webkit-inner-spin-button\]\:appearance-none::-webkit-inner-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none
    }

    .\[\&\:\:-webkit-outer-spin-button\]\:appearance-none::-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none
    }

    .\[\&\:\:-webkit-scrollbar\]\:hidden::-webkit-scrollbar {
        display: none
    }

    .\[\.border-b\]\:pb-6.border-b {
        padding-bottom: calc(var(--spacing)*6)
    }

    .\[\.border-t\]\:pt-6.border-t {
        padding-top: calc(var(--spacing)*6)
    }
}

@property --tw-animation-delay {
    syntax: "*";
    inherits: false;
    initial-value: 0s
}

@property --tw-animation-direction {
    syntax: "*";
    inherits: false;
    initial-value: normal
}

@property --tw-animation-duration {
    syntax: "*";
    inherits: false
}

@property --tw-animation-fill-mode {
    syntax: "*";
    inherits: false;
    initial-value: none
}

@property --tw-animation-iteration-count {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-enter-opacity {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-enter-rotate {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-enter-scale {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-enter-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-enter-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-exit-opacity {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-exit-rotate {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-exit-scale {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-exit-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-exit-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

:root {
    --background: oklch(10% .02 240);
    --foreground: oklch(98% .003 240);
    --card: oklch(15% .03 240);
    --card-foreground: oklch(98% .003 240);
    --popover: oklch(15% .03 240);
    --popover-foreground: oklch(98% .003 240);
    --primary: var(--brand-gold);
    --primary-foreground: oklch(10% .02 240);
    --secondary: var(--brand-green);
    --secondary-foreground: oklch(98% .003 240);
    --muted: oklch(30% .05 240);
    --muted-foreground: oklch(70% .05 240);
    --accent: var(--brand-green-light);
    --accent-foreground: oklch(98% .003 240);
    --destructive: oklch(70% .2 30);
    --border: oklch(100% 0 0/.15);
    --input: oklch(100% 0 0/.2);
    --ring: var(--brand-gold-light);
    --brand-gold: #b8860b;
    --brand-gold-light: #daa520;
    --brand-gold-dark: #8b6914;
    --brand-green: #ffffff;
    --brand-green-light: #ffffff;
    --brand-green-dark: #ffffff;
    --metallic-gold: linear-gradient(180deg, var(--brand-gold-light)0%, var(--brand-gold)51%, var(--brand-gold-dark)100%);
    --metallic-gold-soft: linear-gradient(180deg, var(--brand-gold-light)0%, var(--brand-gold)100%);
    --sidebar: oklch(15% .03 240);
    --sidebar-foreground: oklch(98% .003 240);
    --sidebar-primary: var(--brand-gold);
    --sidebar-primary-foreground: oklch(10% .02 240);
    --sidebar-accent: var(--brand-green);
    --sidebar-accent-foreground: oklch(98% .003 240);
    --sidebar-border: oklch(100% 0 0/.15);
    --sidebar-ring: var(--brand-gold-light)
}

.text-metallic-gold {
    background: var(--metallic-gold);
    color: #0000;
    -webkit-background-clip: text;
    background-clip: text
}

.text-metallic-gold-soft {
    background: var(--metallic-gold-soft);
    color: #0000;
    -webkit-background-clip: text;
    background-clip: text
}

.dark {
    --sidebar: oklch(15% .03 240);
    --sidebar-foreground: oklch(98% .003 240);
    --sidebar-primary: var(--brand-gold);
    --sidebar-primary-foreground: oklch(10% .02 240);
    --sidebar-accent: var(--brand-green);
    --sidebar-accent-foreground: oklch(98% .003 240);
    --sidebar-border: oklch(100% 0 0/.15);
    --sidebar-ring: var(--brand-gold-light)
}

@keyframes claimable-pulse {
    0% {
        box-shadow: 0 0 #eab30833
    }

    70% {
        box-shadow: 0 0 0 10px #eab30800
    }

    to {
        box-shadow: 0 0 #eab30800
    }
}

@media (prefers-reduced-motion:reduce) {
    .animate-claimable-bounce {
        animation: none
    }
}

@keyframes claimable-bounce {

    0%,
    to {
        transform: translateY(0)
    }

    50% {
        transform: translateY(-1px)
    }
}

@media (prefers-reduced-motion:reduce) {
    .animate-claimable-pulse {
        animation: none;
        box-shadow: 0 0 0 2px #eab3084d
    }
}

.animate-claimable-pulse {
    animation: 2s infinite claimable-pulse
}

.animate-claimable-bounce {
    animation: 2s infinite claimable-bounce
}

.casino-v2 {
    --background: oklch(7% .02 250);
    --foreground: oklch(98% .003 250);
    --card: oklch(11% .02 250);
    --card-foreground: oklch(98% .003 250);
    --popover: oklch(11% .02 250);
    --popover-foreground: oklch(98% .003 250);
    --brand-gold: gold;
    --brand-gold-light: #fff2a8;
    --brand-gold-dark: #b8860b;
    --brand-green: #ffffff;
    --brand-green-light: #ffffff;
    --brand-green-dark: #ffffff;
    --primary: var(--brand-green);
    --color-primary: var(--brand-green);
    --color-primary-foreground: var(--primary-foreground);
    --secondary: var(--brand-gold);
    --accent: var(--brand-green-light);
    --ring: var(--brand-green-light);
    --color-ring: var(--brand-green-light);
    --border: oklch(100% 0 0/.2);
    --input: oklch(100% 0 0/.24);
    --lw-1: #f0f0f0;
    --lw-2: #d6d6d6;
    --lw-3: #ffffff;
    --lw-4: #fffcfc;
    --lw-5: #f3f3f3;
    --lw-6: #ffffff;
    --lw-7: #ffffff;
    --lw-8: #ffffff;
    --lw-ring: var(--brand-green);
    --lw-label-even: #ffffff;
    --lw-label-odd: #bfffe6;
    --lw-dark: #aaaaaa;
    --lw-label-on-bright: #060c0af2;
    --lw-label-on-dark: #fffffff0;
    background: radial-gradient(1200px 600px at 20% -10%, #ffffff1f, #0000 60%), radial-gradient(900px 450px at 110% 0, #ffffff1a, #0000 50%), linear-gradient(#000103, #000205 60%, #000104)
}

.casino-v2 ::selection {
    background: var(--brand-green-light);
    color: var(--background)
}

.casino-v2 input::selection {
    background: var(--brand-green);
    color: var(--background)
}

.casino-v2 textarea::selection {
    background: var(--brand-green);
    color: var(--background)
}

.casino-v2 input::-moz-selection {
    background: var(--brand-green);
    color: var(--background)
}

.casino-v2 textarea::-moz-selection {
    background: var(--brand-green);
    color: var(--background)
}

.casino-v2 .casino-heading {
    background: linear-gradient(90deg, #e9f7ff, var(--brand-green-light));
    color: #0000;
    text-transform: uppercase;
    letter-spacing: .04em;
    -webkit-background-clip: text;
    background-clip: text
}

.casino-v2 .casino-heading-blue {
    background: linear-gradient(90deg, var(--brand-green-light), var(--brand-green));
    color: #0000;
    text-transform: uppercase;
    letter-spacing: .04em;
    -webkit-background-clip: text;
    background-clip: text
}

.casino-v2 .casino-subtext {
    color: #fff0b4c7
}

.casino-v2 .casino-panel {
    border-radius: var(--radius-lg);
    background: linear-gradient(145deg, #b1b1b114, #c5c5c50f);
    border: 1px solid #ffffff47;
    box-shadow: inset 0 0 0 1px #b3b3b324, 0 12px 28px #00000059
}

.casino-v2 .casino-button {
    color: #e6f7ff;
    background: linear-gradient(135deg, #b1b1b114, #c5c5c50f);
    border: 1px solid #ffffff47;
    transition: box-shadow .15s, transform .15s, background .15s
}

.casino-v2 .casino-button:hover {
    color: var(--brand-green-light);
    background: linear-gradient(135deg, #b1b1b114, #c5c5c50f);
    box-shadow: 0 0 10px #ffffff59, 0 0 24px #a8a8a833
}

.casino-v2 .random-bet-button {
    isolation: isolate;
    z-index: 0;
    --rb-border: 2px;
    position: relative
}

@property --rb-angle {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg
}

.casino-v2 .random-bet-button:before {
    content: "";
    border-radius: inherit;
    background: conic-gradient(from var(--rb-angle), #00ff9000 0deg, #ffffffa6 60deg, #ffd700b3 180deg, #ececec99 300deg, #00ff9000 360deg);
    padding: var(--rb-border);
    pointer-events: none;
    filter: blur(.35px)drop-shadow(0 0 6px #e6e6e659);
    opacity: .95;
    z-index: -1;
    animation: 2.4s linear infinite rb-rotate;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    -webkit-mask-image: linear-gradient(#000 0 0), linear-gradient(#000 0 0);
    mask-image: linear-gradient(#000 0, #000 0), linear-gradient(#000 0, #000 0);
    -webkit-mask-position: 0 0, 0 0;
    mask-position: 0 0, 0 0;
    -webkit-mask-size: auto, auto;
    mask-size: auto, auto;
    -webkit-mask-repeat: repeat, repeat;
    mask-repeat: repeat, repeat;
    -webkit-mask-clip: content-box, border-box;
    mask-clip: content-box, border-box;
    -webkit-mask-origin: content-box, border-box;
    mask-origin: content-box, border-box;
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    -webkit-mask-source-type: auto, auto;
    mask-mode: match-source, match-source
}

.casino-v2 .random-bet-button:hover:before {
    opacity: 1
}

@keyframes rb-rotate {
    to {
        --rb-angle: 360deg
    }
}

@media (prefers-reduced-motion:reduce) {
    .casino-v2 .random-bet-button:before {
        animation: none
    }
}

.casino-v2 .neon-gold {
    text-shadow: 0 0 6px #ffd70080, 0 0 12px #ffd70059, 0 0 20px #ffd70040
}

.casino-v2 .neon-green {
    text-shadow: 0 0 6px #ffffff80, 0 0 12px #ffffff59, 0 0 20px #ffffff40
}

.casino-v2 .neon-blue {
    text-shadow: 0 0 6px #ffffffa6, 0 0 12px #ffffff66, 0 0 20px #ffffff4d
}

.casino-v2 .neon-cyan {
    text-shadow: 0 0 6px #ffffff99, 0 0 12px #ffffff61, 0 0 20px #ffffff47
}

.marquee-track {
    width: max-content;
    animation: 28s linear infinite marquee-x-track;
    display: flex
}

.marquee-group {
    white-space: nowrap;
    align-items: center;
    animation: none;
    display: inline-flex
}

@keyframes marquee-x-track {
    0% {
        transform: translate(0)
    }

    to {
        transform: translate(-50%)
    }
}

.marquee-fade-left,
.marquee-fade-right {
    pointer-events: none;
    width: 28px;
    position: absolute;
    top: 0;
    bottom: 0
}

.marquee-fade-left {
    background: linear-gradient(90deg, var(--background)0%, transparent 100%);
    left: 0
}

.marquee-fade-right {
    background: linear-gradient(270deg, var(--background)0%, transparent 100%);
    right: 0
}

.marquee-mask {
    -webkit-mask-image: linear-gradient(90deg, #0000 0, #000 28px calc(100% - 28px), #0000 100%);
    mask-image: linear-gradient(90deg, #0000 0, #000 28px, #000 calc(100% - 28px), #0000)
}

.marquee-fade-left:after,
.marquee-fade-right:after {
    content: "";
    filter: blur(4px);
    background: inherit;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0
}

@media (min-width:640px) {
    .marquee-track {
        animation-duration: 36s
    }

    .marquee-fade-left,
    .marquee-fade-right {
        width: 40px
    }

    .marquee-mask {
        -webkit-mask-image: linear-gradient(90deg, #0000 0, #000 40px calc(100% - 40px), #0000 100%);
        mask-image: linear-gradient(90deg, #0000 0, #000 40px, #000 calc(100% - 40px), #0000)
    }
}

@media (min-width:1024px) {
    .marquee-track {
        animation-duration: 42s
    }
}

.casino-v2.retro-00s {
    font-family: Trebuchet MS, Tahoma, Verdana, system-ui, -apple-system, sans-serif
}

.casino-v2.retro-00s .casino-panel {
    background: repeating-linear-gradient(135deg, #ffffff0a 0, #ffffff0a 2px, #0000 2px, #0000 4px), linear-gradient(145deg, #ffffff14, #006a580f);
    border: 1.5px dotted #ffffff73;
    box-shadow: inset 0 0 0 1px #ffffff2e, 0 10px 24px #00000059
}

.casino-v2.retro-00s .retro-heading {
    text-transform: uppercase;
    border-bottom: 1px dotted #ffffff73;
    padding-bottom: 2px;
    font-family: Trebuchet MS, Tahoma, Verdana, sans-serif
}

.casino-v2.retro-00s .retro-card {
    background: repeating-linear-gradient(90deg, #ffffff09 0, #ffffff09 2px, #0000 2px, #0000 6px), linear-gradient(#00081099, #0008104d);
    border: 1px dotted #ffffff8c;
    border-radius: 6px;
    transition: transform .12s, box-shadow .12s, border-color .12s;
    box-shadow: inset 0 1px #ffffff0f, 0 2px #ffffff0a, 0 0 12px #ffffff1f
}

.casino-v2.retro-00s .retro-card:hover {
    border-color: #ffffffcc;
    transform: translateY(-1px);
    box-shadow: 0 0 10px #ffffff59, 0 0 20px #ffffff33, inset 0 1px #ffffff14
}

.casino-v2.retro-00s .retro-input,
.casino-v2.retro-00s .retro-select {
    color: var(--brand-green-light);
    background: linear-gradient(#000a14cc, #000a1499);
    border: 1px dotted #ffffff8c;
    box-shadow: inset 0 1px #ffffff0f
}

.casino-v2.retro-00s .retro-input::placeholder {
    color: #ffffff80
}

.casino-v2.retro-00s .retro-input:focus,
.casino-v2.retro-00s .retro-select:focus {
    border-color: #ffffffd9;
    outline: none;
    box-shadow: 0 0 0 2px #ffffff40, inset 0 1px #ffffff14
}

.casino-v2.retro-00s .retro-button {
    color: #e6f7ff;
    text-shadow: 0 0 6px #ffffffa6;
    background: linear-gradient(#ffffff38, #ffffff29);
    border: 1px dotted #ffffffa6
}

.casino-v2.retro-00s .retro-button:hover {
    background: linear-gradient(#ffffff47, #ffffff33);
    box-shadow: 0 0 12px #ffffff59
}

.casino-v2.retro-00s .retro-separator {
    border-top: 1px dotted #ffffff59
}

.casino-v2.retro-00s .greentext {
    color: #ffffff
}

.casino-v2.retro-00s .retro-underline {
    border-bottom: 2px dotted #ffffffd9;
    align-items: center;
    padding-bottom: 2px;
    display: inline-flex
}

.casino-v2.retro-00s .retro-card:hover .retro-underline {
    border-bottom-color: var(--brand-green-light);
    box-shadow: 0 2px #ffffff47
}

.casino-v2.retro-00s .retro-dialog {
    background: repeating-linear-gradient(135deg, #ffffff09 0, #ffffff09 2px, #0000 2px, #0000 6px), linear-gradient(#000810d9, #00081099);
    border: 1.5px dotted #ffffff8c;
    overflow: hidden;
    box-shadow: 0 0 14px #ffffff47, 0 12px 36px #0000008c
}

.casino-v2.retro-00s .retro-titlebar {
    background: linear-gradient(90deg, #ffffff0f, #ffffff00);
    border-bottom: 1px dotted #ffffff73
}

.casino-v2.retro-00s .retro-section {
    background: linear-gradient(#000a1499, #000a1466);
    border: 1px dotted #ffffff73;
    border-radius: 8px;
    padding: 12px
}

.casino-v2.retro-00s .retro-progress-track {
    background: #ffffff14;
    border: 1px dotted #ffffff73;
    border-radius: 9999px;
    width: 100%;
    height: 6px
}

.casino-v2.retro-00s .retro-progress-fill {
    background: linear-gradient(90deg, var(--brand-green), var(--brand-green-light));
    border-radius: 9999px;
    height: 4px;
    margin: 1px;
    box-shadow: 0 0 10px #ffffff59
}

.glitch-text {
    letter-spacing: .08em;
    text-shadow: 0 0 6px #ffffff59, 0 0 18px rgba(255, 255, 255, 0.2);
    font-size: 28px;
    animation: 1.8s linear infinite glitch-shift;
    position: relative
}

.glitch-text:before,
.glitch-text:after {
    content: attr(data-text);
    clip-path: inset(0);
    opacity: .7;
    position: absolute;
    left: 0;
    right: 0
}

.glitch-text:before {
    color: #ffffffe6;
    filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.4));
    animation: 1.2s steps(2, end) infinite glitch-before;
    transform: translate(2px)
}

.glitch-text:after {
    color: #0099ffe6;
    filter: drop-shadow(0 0 4px #0099ff59);
    animation: 1.4s steps(2, end) infinite glitch-after;
    transform: translate(-2px)
}

@keyframes glitch-before {
    0% {
        clip-path: inset(0 0 70%)
    }

    20% {
        clip-path: inset(10% 0 40%)
    }

    40% {
        clip-path: inset(50% 0 20%)
    }

    60% {
        clip-path: inset(20% 0 60%)
    }

    80% {
        clip-path: inset(40% 0 10%)
    }

    to {
        clip-path: inset(0 0 70%)
    }
}

@keyframes glitch-after {
    0% {
        clip-path: inset(60% 0 0)
    }

    20% {
        clip-path: inset(30% 0 10%)
    }

    40% {
        clip-path: inset(0 0 60%)
    }

    60% {
        clip-path: inset(10% 0 30%)
    }

    80% {
        clip-path: inset(0 0 50%)
    }

    to {
        clip-path: inset(60% 0 0)
    }
}

@keyframes glitch-shift {
    0% {
        transform: translate(0)
    }

    25% {
        transform: translate(.5px)
    }

    50% {
        transform: translate(-.5px)
    }

    75% {
        transform: translate(.5px, .5px)
    }

    to {
        transform: translate(0)
    }
}

.glitch-flicker {
    animation: 1.6s steps(2, end) infinite glitch-flicker
}

@keyframes glitch-flicker {

    0%,
    19%,
    21%,
    23%,
    80%,
    to {
        opacity: 1
    }

    20%,
    22% {
        opacity: .25
    }

    60% {
        opacity: .6
    }
}

.scanlines {
    filter: blur(.2px);
    opacity: .55;
    pointer-events: none;
    mix-blend-mode: soft-light;
    background: repeating-linear-gradient(#ffffff0d 0, #ffffff0d 2px, #0000 2px, #0000 4px);
    position: absolute;
    top: -24px;
    right: -24px;
    bottom: -24px;
    left: -24px
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-leading {
    syntax: "*";
    inherits: false
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false
}

@property --tw-tracking {
    syntax: "*";
    inherits: false
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-blur {
    syntax: "*";
    inherits: false
}

@property --tw-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-invert {
    syntax: "*";
    inherits: false
}

@property --tw-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-duration {
    syntax: "*";
    inherits: false
}

@property --tw-ease {
    syntax: "*";
    inherits: false
}

@property --tw-text-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-text-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@keyframes spin {
    to {
        transform: rotate(360deg)
    }
}

@keyframes ping {

    75%,
    to {
        opacity: 0;
        transform: scale(2)
    }
}

@keyframes pulse {
    50% {
        opacity: .5
    }
}

@keyframes bounce {

    0%,
    to {
        animation-timing-function: cubic-bezier(.8, 0, 1, 1);
        transform: translateY(-25%)
    }

    50% {
        animation-timing-function: cubic-bezier(0, 0, .2, 1);
        transform: none
    }
}

@keyframes enter {
    0% {
        opacity: var(--tw-enter-opacity, 1);
        transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0)scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1))rotate(var(--tw-enter-rotate, 0))
    }
}

@keyframes exit {
    to {
        opacity: var(--tw-exit-opacity, 1);
        transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0)scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1))rotate(var(--tw-exit-rotate, 0))
    }
}